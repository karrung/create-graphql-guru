0 info it worked if it ends with ok
1 verbose cli [ '/home/ninja/n/bin/node', '/home/ninja/n/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.11.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/ninja/work/projects/guru/cli',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/ninja/.npm/create-graphql-guru/0.0.3/package.tgz not in flight; packing
9 verbose correctMkdir /home/ninja/.npm correctMkdir not in flight; initializing
10 info lifecycle create-graphql-guru@0.0.3~prepublish: create-graphql-guru@0.0.3
11 silly lifecycle create-graphql-guru@0.0.3~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/ninja/.npm/create-graphql-guru/0.0.3/package.tgz',
12 verbose tar pack   '/home/ninja/work/projects/guru/cli' ]
13 verbose tarball /home/ninja/.npm/create-graphql-guru/0.0.3/package.tgz
14 verbose folder /home/ninja/work/projects/guru/cli
15 verbose addLocalTarball adding from inside cache /home/ninja/.npm/create-graphql-guru/0.0.3/package.tgz
16 verbose correctMkdir /home/ninja/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd create-graphql-guru@0.0.3
18 verbose afterAdd /home/ninja/.npm/create-graphql-guru/0.0.3/package/package.json not in flight; writing
19 verbose correctMkdir /home/ninja/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/ninja/.npm/create-graphql-guru/0.0.3/package/package.json written
21 silly publish { name: 'create-graphql-guru',
21 silly publish   version: '0.0.3',
21 silly publish   description: 'Command line scaffolding and generator for Graphql Guru',
21 silly publish   main: 'dist/guru.js',
21 silly publish   bin: { guru: './dist/guru.js' },
21 silly publish   scripts:
21 silly publish    { build: 'node ./node_modules/@graphql-guru/babel-tasks/tasks.js',
21 silly publish      watch: 'npm run build -- -w',
21 silly publish      lint: 'eslint --quiet \'./src\' || true',
21 silly publish      test: 'ava --fail-fast src/__tests__',
21 silly publish      'test:spec': 'ava src/__tests__ -v',
21 silly publish      'test:watch': 'watch \'npm run test\' ./src' },
21 silly publish   author: { name: 'Otis Virginie' },
21 silly publish   keywords:
21 silly publish    [ 'cli',
21 silly publish      'generator',
21 silly publish      'scaffolding',
21 silly publish      'schemas',
21 silly publish      'resolvers',
21 silly publish      'graphql',
21 silly publish      'guru',
21 silly publish      'graphql-guru',
21 silly publish      'graphql.guru',
21 silly publish      'express',
21 silly publish      'nodejs' ],
21 silly publish   license: 'MIT',
21 silly publish   dependencies:
21 silly publish    { bluebird: '^3.5.0',
21 silly publish      chalk: '^2.0.1',
21 silly publish      commander: '^2.9.0',
21 silly publish      shelljs: '^0.7.8',
21 silly publish      'to-camel-case': '^1.0.0',
21 silly publish      'to-snake-case': '^1.0.0' },
21 silly publish   devDependencies:
21 silly publish    { '@graphql-guru/babel-tasks': '^1.0.0',
21 silly publish      ava: '^0.21.0',
21 silly publish      'babel-cli': '^6.24.1',
21 silly publish      'babel-eslint': '^7.2.2',
21 silly publish      'babel-plugin-transform-async-to-generator': '^6.24.1',
21 silly publish      'babel-polyfill': '^6.23.0',
21 silly publish      'babel-preset-es2015': '^6.24.1',
21 silly publish      'babel-preset-stage-3': '^6.24.1',
21 silly publish      eslint: '^4.3.0',
21 silly publish      'eslint-config-standard': '^10.2.1',
21 silly publish      'eslint-plugin-import': '^2.2.0',
21 silly publish      'eslint-plugin-node': '^5.1.1',
21 silly publish      'eslint-plugin-promise': '^3.5.0',
21 silly publish      'eslint-plugin-standard': '^3.0.1',
21 silly publish      rimraf: '^2.6.1',
21 silly publish      'source-map-support': '^0.4.14',
21 silly publish      'tap-difflet': '^0.7.0',
21 silly publish      'tap-min': '^1.2.1',
21 silly publish      watch: '^1.0.2',
21 silly publish      yarn: '^0.27.5' },
21 silly publish   readme: '# Create GraphQL Guru\n Easily Scaffold and generate graphql servers  \n\n## Quick overview  \n```npm install -g create-graphql-guru-sever\n\nguru express my-server  \ncd my-server  \nnpm run dev\n```\n\n### Get Started Immediately\nYou **don’t** need to install or configure tools like Webpack or Babel.\nThey are preconfigured and hidden so that you can focus on the code.\n\nJust create a project, and you’re good to go.\n\n## Getting started\n\n### Installation\nInstall once globally:\n\n```npm install -g create-graphql-guru```\n\nYou will need **Node >= 6 on your machine**. You can you [n](https://github.com/tj/n#installation) or [nvm](https://github.com/creationix/nvm#installation)\n\n### Creating a server\nTo create a new server, run:  \n\n```\nguru express my-server\n\ncd my-server\nnpm run dev  \n```\n\nIt will create a directory called  `my-server` inside the current folder.  \nInside that directory, it will generate the initial project structure and install the transitive dependencies:\n\n```\nmy-server\n├── bin\n│   └── www\n│       └── index.js\n├── node_modules\n├── public\n├── server\n│   ├── core\n│   │   ├── database\n│   │   ├── middleware\n│   │   │   └── index-middleware.js\n│   │   ├── routes\n│   │   │   └── index-routes.js\n│   │   └── database.js \n│   ├── modules\n│   │   └── resolverQuery-hello.js \n│   │   └── schemaQuery-hello.graphql \n│   │   └── schemaType-hello.graphql \n│   │   └── access.js \n│   ├── queries\n│   ├── views\n│   │   └── layout \n│   │   └── index.hbs \n│   ├── environment.js\n│   └── index.js\n├── LICENSE\n├── package.json\n├── query-history.json\n├── README.md\n└── yarn.lock\n```\n\nNo configuration or complicated folder structures, just the files you need to build your app.\nOnce the installation is done, you can run some commands inside the project folder:\n\n`npm run dev` or `yarn run dev`\n\n\n\n## Generating files\n\n\n### Types\n`guru type` generate type definition.\n\nExample\n```\nguru type  -m User -e "Enum USER GUEST" -o "User name:string lastName:String age:Int" \n```\n\n```\n Usage: guru type [options]\n\nOptions:\n\n  -m, --module <name>                 Module name\n  -p, --path                          Path to where module will be created, relative to root.\n  -e, --enum ["name value"]           creates Enum definition\n  -f, --interface ["name key:value"]  interface definition\n  -i, --input ["name key:value"]      input definition\n  -o, --object ["name key:value"]     Object definition\n  -s, --scalar ["name key:value"]     Scalar definition\n  -u, --union ["name key:value"]      creates Union definition\n  -h, --help                          output usage information\n```\n\n### Queries\n\n`guru query` generates resolver and schema queries.\n\nExample\n```\nguru query -m User -d \'mongodb\' -rs \'User\' findAll findById\n```\n\nQuery options\n```\nUsage: guru query [options]\n\nOptions:\n\n  -m, --module <name>    Modules name\n  -d, --database <name>  Extends module with database client\n  -r, --resolver [true]  Create mutation resolve\n  -s, --schema [true]    Name of query module\n  -p, --path             Path to where module will be created, relative to root.\n  -h, --help             output usage information\n```\n\n### Mutations\n`guru mutation` generates resolver and schema queries.\n\nExample\n```\nguru Mutation -m query -d \'mongodb\' -rs \'User\' findAll findById\n```\n\nMutation options\n```\nUsage: guru-mutation [options]\n\nOptions:\n\n  -m, --module <name>    Modules name\n  -d, --database <name>  Extends module with database client\n  -r, --resolver [true]  Create mutation resolve\n  -s, --schema [true]    Name of query module\n  -p, --path             Path to where module will be created, relative to root.\n  -h, --help             output usage information\n```\n\n\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '27062dcf77be56ce4a0af654225702dbb327b3d2',
21 silly publish   _id: 'create-graphql-guru@0.0.3',
21 silly publish   _shasum: '1fac6e0d18c650997f35bb133f2eac1088d23c73',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name create-graphql-guru
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'create-graphql-guru',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'create-graphql-guru',
26 silly mapToRegistry   name: 'create-graphql-guru',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/create-graphql-guru
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/ninja/.npm/create-graphql-guru/0.0.3/package.tgz
30 verbose request uri https://registry.npmjs.org/create-graphql-guru
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:31:12 AM
33 verbose request using bearer token for auth
34 verbose request id 7505c7d72cb0c027
35 http request PUT https://registry.npmjs.org/create-graphql-guru
36 http 403 https://registry.npmjs.org/create-graphql-guru
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sun, 06 Aug 2017 09:31:32 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-hhn1526-HHN',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1502011873.637212,VS0,VE19680',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /home/ninja/.npm/registry.npmjs.org/create-graphql-guru on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.0.3." : create-graphql-guru
40 verbose stack     at makeError (/home/ninja/n/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/home/ninja/n/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/home/ninja/n/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/home/ninja/n/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/home/ninja/n/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/home/ninja/n/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid create-graphql-guru
43 verbose cwd /home/ninja/work/projects/guru/cli
44 error Linux 4.12.3-1-ARCH
45 error argv "/home/ninja/n/bin/node" "/home/ninja/n/bin/npm" "publish"
46 error node v6.11.2
47 error npm  v3.10.10
48 error code E403
49 error "You cannot publish over the previously published version 0.0.3." : create-graphql-guru
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
