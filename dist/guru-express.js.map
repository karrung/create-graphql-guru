{"version":3,"sources":["../src/guru-express.js"],"names":["promisifyAll","dest","process","cwd","template","join","__dirname","pkgPath","pkg","require","cd","cp","exec","error","mkdir","parse","argv","appName","args","appFolder","name","createFolder","folder","exit","stdout","write","copyTemplate","install","writeFileAsync","JSON","stringify","then","yarn","catch","Error","run"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAASA,YAAT;;AAEA,IAAMC,OAAOC,QAAQC,GAAR,EAAb;AACA,IAAMC,WAAW,eAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAjB;AACA,IAAMC,UAAU,eAAKF,IAAL,CAAUC,SAAV,EAAqB,mCAArB,CAAhB;AACA,IAAME,MAAMC,QAAQF,OAAR,CAAZ;IACQG,E,qBAAAA,E;IAAIC,E,qBAAAA,E;IAAIC,I,qBAAAA,I;IAAMC,K,qBAAAA,K;IAAOC,K,qBAAAA,K;;;AAE7B,oBAAQC,KAAR,CAAcb,QAAQc,IAAtB;AACA,IAAMC,UAAU,oBAAQC,IAAR,CAAa,CAAb,CAAhB;AACA,IAAMC,YAAelB,IAAf,SAAuBgB,OAA7B;;AAEAT,IAAIY,IAAJ,GAAWH,OAAX;;AAEA,SAASI,YAAT,CAAuBC,MAAvB,EAA+B;AAC7BR,QAAMQ,MAAN;AACAT,YACIX,QAAQqB,IAAR,EADJ,GAEIrB,QAAQsB,MAAR,CAAeC,KAAf,cAAgCR,OAAhC,gBAFJ;AAGD;;AAED,SAASS,YAAT,GAAyB;AACvBf,KAAG,IAAH,EAASP,QAAT,EAAmBe,SAAnB;AACAN,YACIX,QAAQqB,IAAR,EADJ,GAEIrB,QAAQsB,MAAR,CAAeC,KAAf,wCAFJ;AAGD;;AAED,SAASE,OAAT,GAAoB;AAClB,eAAGC,cAAH,CACKT,SADL,oBAEEU,KAAKC,SAAL,CAAetB,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAFF,EAGE,iBAAS;AACPK,YAAQX,QAAQqB,IAAR,EAAR,GAAyBrB,QAAQsB,MAAR,CAAeC,KAAf,2BAAzB;AACD,GALH,EAOGM,IAPH,CAOQ;AAAA,WAAMC,MAAN;AAAA,GAPR,EAQGD,IARH,CAQQ,YAAM;AACV7B,YAAQsB,MAAR,CAAeC,KAAf,CAAqB,iEAArB;AACAb;AACAV,YAAQsB,MAAR,CAAeC,KAAf,CAAqB,sDAArB;AACAvB,YAAQsB,MAAR,CAAeC,KAAf,CAAqB,kEAArB;AACAvB,YAAQsB,MAAR,CAAeC,KAAf,CAAqB,gEAArB;AACD,GAdH,EAeGQ,KAfH,CAeS,iBAAS;AACd,UAAM,IAAIC,KAAJ,CAAUrB,KAAV,CAAN;AACD,GAjBH;AAkBD;;AAED,SAASmB,IAAT,GAAiB;AACftB,KAAGS,SAAH;AACAP,OAAK,cAAL;AACAC,YAAUX,QAAQqB,IAAR,EAAV,GAA2BrB,QAAQsB,MAAR,CAAeC,KAAf,4BAA3B;AACD;;AAGD,SAASU,GAAT,GAAgB;AACdd,eAAaJ,OAAb;AACAS;AACAC;AACD;;AAEDQ","file":"guru-express.js","sourcesContent":["import program from 'commander';\nimport shell from 'shelljs';\nimport path from 'path';\nimport fs from 'fs';\nimport Bluebird from 'bluebird';\n\nBluebird.promisifyAll(fs);\n\nconst dest = process.cwd();\nconst template = path.join(__dirname, '../templates/express/*');\nconst pkgPath = path.join(__dirname, '../templates/express/package.json');\nconst pkg = require(pkgPath);\nconst { cd, cp, exec, error, mkdir } = shell;\n\nprogram.parse(process.argv);\nconst appName = program.args[0];\nconst appFolder = `${dest}/${appName}`;\n\npkg.name = appName;\n\nfunction createFolder (folder) {\n  mkdir(folder);\n  error()\n    ? process.exit()\n    : process.stdout.write(`Created ${appName} folder \\n`);\n}\n\nfunction copyTemplate () {\n  cp('-R', template, appFolder);\n  error()\n    ? process.exit()\n    : process.stdout.write(`Express files copied to app folder\\n`);\n}\n\nfunction install () {\n  fs.writeFileAsync(\n    `${appFolder}/package.json`,\n    JSON.stringify(pkg, null, 2),\n    error => {\n      error ? process.exit() : process.stdout.write(`Updated package name \\n`);\n    }\n  )\n    .then(() => yarn())\n    .then(() => {\n      process.stdout.write('\\n===========================================================\\n');\n      exec(`echo Guru Files created:;ls`);\n      process.stdout.write('\\nnpm run dev starts the sever in development mode\\n');\n      process.stdout.write('\\nSchema and resolves can be found in server/modules directory\\n');\n      process.stdout.write('\\n============================================================');\n    })\n    .catch(error => {\n      throw new Error(error);\n    });\n}\n\nfunction yarn () {\n  cd(appFolder);\n  exec('yarn install');\n  error() ? process.exit() : process.stdout.write(`Dependencies installed\\n`);\n}\n\n\nfunction run () {\n  createFolder(appName);\n  copyTemplate();\n  install();\n}\n\nrun();\n"]}